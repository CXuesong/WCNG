{"version":3,"sources":["src/script/wcng/wcng.ts"],"names":[],"mappings":";;;IAAA,mBAAmB,GAAW;QAC1B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QACrB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjE,CAAC;;;;;YAID;gBAEI,qBAAmB,MAAc,EAAS,MAAc;oBAArC,WAAM,GAAN,MAAM,CAAQ;oBAAS,WAAM,GAAN,MAAM,CAAQ;oBAEpD,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;oBAC/C,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;gBACnD,CAAC;gBAEM,gCAAU,GAAjB;oBACI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;gBAC1C,CAAC;gBAEM,uCAAiB,GAAxB;oBACI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;gBAC1C,CAAC;gBAEM,oCAAc,GAArB;oBACI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChD,CAAC;gBAEM,mCAAa,GAApB;oBACI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;gBAC3C,CAAC;gBAEM,oCAAc,GAArB;oBACI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjE,CAAC;gBAEM,8BAAQ,GAAf;oBACI,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBACjC,CAAC;gBACL,kBAAC;YAAD,CA/BA,AA+BC,IAAA;;YAED;gBAII,uBAAmB,QAAkB,EAAS,QAAkB;oBAA7C,aAAQ,GAAR,QAAQ,CAAU;oBAAS,aAAQ,GAAR,QAAQ,CAAU;oBAC5D,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;wBAAC,MAAM,2BAA2B,CAAC;oBAC5D,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;wBAAC,MAAM,2BAA2B,CAAC;gBAChE,CAAC;gBAKM,gCAAQ,GAAf;oBACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,iBAAiB,EAAE,CAAC,EAAE,EACxD,CAAC;wBACG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACxD,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACxD,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;wBAG7E,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAAC,QAAQ,CAAC;wBACrB,MAAM,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjC,CAAC;gBACL,CAAC;gBACL,oBAAC;YAAD,CAxBA,AAwBC,IAAA;YAtB0B,+BAAiB,GAAG,EAAE,CAAC;;QAuBlD,CAAC","file":"wcng.js","sourcesContent":["function titleCase(str: string){\r\n    if (!str) return str;\r\n    return str[0].toUpperCase() + str.substring(1).toLowerCase();\r\n}\r\n/**\r\n * Represents a series of names used by a clan cat.\r\n */\r\nexport class ClanCatName {\r\n\r\n    constructor(public prefix: string, public suffix: string)\r\n    {\r\n        console.assert(prefix == prefix.toLowerCase());\r\n        console.assert(suffix == suffix.toLowerCase());\r\n    }\r\n\r\n    public getKitName() {\r\n        return titleCase(this.prefix + \"kit\");\r\n    }\r\n\r\n    public getApprenticeName() {\r\n        return titleCase(this.prefix + \"paw\");\r\n    }\r\n\r\n    public getWarriorName() {\r\n        return titleCase(this.prefix + this.suffix);\r\n    }\r\n\r\n    public getLeaderName() {\r\n        return titleCase(this.prefix + \"star\");\r\n    }\r\n\r\n    public getAncientName() {\r\n        return titleCase(this.prefix) + \" \" + titleCase(this.suffix);\r\n    }\r\n\r\n    public toString() {\r\n        return this.getWarriorName();\r\n    }\r\n}\r\n\r\nexport class NameGenerator {\r\n\r\n    public static readonly MaxAllowedRetries = 10;\r\n\r\n    constructor(public prefixes: string[], public suffixes: string[]) {\r\n        if (prefixes.length == 0) throw \"prefixes cannot be empty.\";\r\n        if (suffixes.length == 0) throw \"suffixes cannot be empty.\";\r\n    }\r\n\r\n    /**\r\n     * Generates the next warrior name.\r\n     */\r\n    public nextName(): ClanCatName {\r\n        for (let i = 0; i < NameGenerator.MaxAllowedRetries; i++)\r\n        {\r\n            let pi = Math.floor(Math.random()*this.prefixes.length);\r\n            let si = Math.floor(Math.random()*this.suffixes.length);\r\n            let p = this.prefixes[pi].toLowerCase(), s = this.suffixes[si].toLowerCase();\r\n            // Sanity check\r\n            // Prefix cannot be the same as suffix\r\n            if (p == s) continue;\r\n            return new ClanCatName(p, s);\r\n        }\r\n    }\r\n}\r\n"]}